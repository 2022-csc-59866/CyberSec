{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\offer\\\\OneDrive\\\\Desktop\\\\SD\\\\react-website\\\\src\\\\components\\\\DictionarySearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DictionarySearch = () => {\n  _s();\n  const [word, setWord] = useState('');\n  const [definition, setDefinition] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSearch = async () => {\n    if (!word) {\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/search?word=${word}`);\n      const data = await response.json();\n      if (response.ok) {\n        var _result$, _result$$meanings$, _result$$meanings$$de;\n        const result = data.result;\n        const firstDefinition = (_result$ = result[0]) === null || _result$ === void 0 ? void 0 : (_result$$meanings$ = _result$.meanings[0]) === null || _result$$meanings$ === void 0 ? void 0 : (_result$$meanings$$de = _result$$meanings$.definitions[0]) === null || _result$$meanings$$de === void 0 ? void 0 : _result$$meanings$$de.definition;\n        setDefinition(firstDefinition || 'No definition found.');\n      } else {\n        setError('An error occurred while fetching the definition.');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setError('An error occurred while fetching the definition.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dictionary Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: word,\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      disabled: loading,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), definition && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: definition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DictionarySearch, \"/sezaU0I86jgZoOxtkyl/Mgt2ZQ=\");\n_c = DictionarySearch;\nexport default DictionarySearch;\nvar _c;\n$RefreshReg$(_c, \"DictionarySearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DictionarySearch","_s","word","setWord","definition","setDefinition","loading","setLoading","error","setError","handleSearch","response","fetch","data","json","ok","_result$","_result$$meanings$","_result$$meanings$$de","result","firstDefinition","meanings","definitions","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/offer/OneDrive/Desktop/SD/react-website/src/components/DictionarySearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DictionarySearch = () => {\r\n  const [word, setWord] = useState('');\r\n  const [definition, setDefinition] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSearch = async () => {\r\n    if (!word) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/search?word=${word}`);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        const result = data.result;\r\n        const firstDefinition = result[0]?.meanings[0]?.definitions[0]?.definition;\r\n        setDefinition(firstDefinition || 'No definition found.');\r\n      } else {\r\n        setError('An error occurred while fetching the definition.');\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n      setError('An error occurred while fetching the definition.');\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dictionary Search</h2>\r\n      <input type=\"text\" value={word} onChange={(e) => setWord(e.target.value)} />\r\n      <button onClick={handleSearch} disabled={loading}>Search</button>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      {definition && <p>{definition}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DictionarySearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}